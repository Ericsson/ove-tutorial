#!/usr/bin/env bash

# sanity checks
if [ ! -s "$OVE_BASE_DIR"/codechecker/venv/bin/activate ]; then
	echo "error: codechecker: virtual env not found" 1>&2
	exit 1
elif [ ! -s "$OVE_BASE_DIR"/codechecker/build/CodeChecker/bin/CodeChecker ]; then
	echo "error: codechecker: binary not built" 1>&2
	exit 1
fi

# args
if [ $# -eq 0 ]; then
	# shellcheck disable=SC2086
	projs=$(printf "%s\n" ${OVE_PROJECT_LIST/codechecker})
else
	while true; do
		if [ "$*" = "" ]; then
		       break
		fi
		re=\\b$1\\b
		if [[ "$OVE_PROJECT_LIST" =~ $re ]]; then
			projs+="$1 "
		else
			echo "error: '$1' unknown project" 1>&2
		fi

		shift
	done
fi

# run CodeChecker
for p in $projs; do
	if ! [ -e "$OVE_OWEL_DIR"/projects/"$p"/clean ]; then
		echo "codechecker: OVE project '$p' does not have a 'clean' file"
		continue
	fi

	if ! [ -e "$OVE_OWEL_DIR"/projects/"$p"/build ]; then
		echo "codechecker: OVE project '$p' does not have a 'build' file"
		continue
	fi

	echo "codechecker: OVE project '$p'"
	# shellcheck disable=SC1091
	source "$OVE_BASE_DIR"/codechecker/venv/bin/activate
	# shellcheck disable=SC2086
	"$OVE_BASE_DIR"/codechecker/build/CodeChecker/bin/CodeChecker \
			check \
			-b "cd $OVE_BASE_DIR; bash -c \"source ove; ove clean $p; ove build $p\"" \
			$CODECHECKER_ARGS \
			-o "$OVE_BASE_DIR"/codechecker-reports
	ret=$?
	if [ $ret -ne 0 ]; then
		echo "error: codechecker: OVE project '$p' NOK $ret" 1>&2
	fi
done
