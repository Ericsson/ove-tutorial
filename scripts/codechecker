#!/usr/bin/env bash

if [ $# -eq 0 ]; then
	projs=$(echo $OVE_PROJECT_LIST | xargs -n1 | grep -v codechecker)
else
	while true; do
		[ "$*" == "" ] && break
		re=\\b$1\\b
		if [[ "$OVE_PROJECT_LIST" =~ $re ]]; then
			projs+="$1 "
		else
			echo "error: '$1' unknown project"
		fi

		shift
	done
fi

restore() {
	if [ $restore -eq 1 ]; then
		sed -i "/^OVE_TAINT_USER_ENV/d" ${HOME}/.oveconfig
		[ -s ${HOME}/.oveconfig ] || rm -v ${HOME}/.oveconfig
	elif [ $restore -eq 2 ]; then
		ove config OVE_TAINT_USER_ENV 1 > /dev/null
	fi
}

for p in $projs; do
	if ! [ -e $OVE_PROJECT_DIR/projects/$p/clean ]; then
		echo "Project '$p' does not have a 'clean' file"
		continue
	fi

	if ! [ -e $OVE_PROJECT_DIR/projects/$p/build ]; then
		echo "Project '$p' does not have a 'build' file"
		continue
	fi

	if [ "$CODECHECKER_CLANG" != "" ]; then
		if ! command -V $CODECHECKER_CLANG &> /dev/null; then
			echo "warning: '$CODECHECKER_CLANG' not found. Check ove config CODECHECKER_CLANG"
	else
		sed -i "s|^      \"clangsa\".*|      \"clangsa\": \"$CODECHECKER_CLANG\",|g" \
			$OVE_BASE_DIR/codechecker/build/CodeChecker/config/package_layout.json
		fi
	fi

	if [ "$CODECHECKER_TIDY" != "" ]; then
		if ! command -V $CODECHECKER_TIDY &> /dev/null; then
			echo "warning: '$CODECHECKER_TIDY' not found. Check ove config CODECHECKER_TIDY"
		else
			sed -i "s|^      \"clang-tidy\".*|      \"clang-tidy\": \"$CODECHECKER_TIDY\"|g" \
				$OVE_BASE_DIR/codechecker/build/CodeChecker/config/package_layout.json
		fi
	fi

	echo "CodeChecker for $p..."
	taint_cfg=$(ove config OVE_TAINT_USER_ENV)
	restore=0
	if [ "x$taint_cfg" = "x" ]; then
		restore=1
	elif [[ $taint_cfg == *OVE_TAINT_USER_ENV*1 ]]; then
		restore=2
	fi

	if [ $restore -ne 0 ]; then
		trap restore EXIT
		ove add-config ${HOME}/.oveconfig OVE_TAINT_USER_ENV 0
	fi
	source $OVE_BASE_DIR/codechecker/venv/bin/activate
	$OVE_BASE_DIR/codechecker/build/CodeChecker/bin/CodeChecker \
			check \
			-b "cd $OVE_BASE_DIR; bash -c \"source ove; ove clean $p; ove build $p\"" \
			$CODECHECKERS_ARGS \
			-o ./reports
	ret=$?

	if [ $ret -eq 0 ]; then
		echo "CodeChecker: $p OK"
	else
		echo "CodeChecker: $p NOK $ret"
	fi
done
